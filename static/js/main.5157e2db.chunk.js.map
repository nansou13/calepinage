{"version":3,"sources":["Components/Room/styles.js","Components/Room/index.js","Components/Piece/styles.js","Components/Piece/index.js","Components/Lame/styles.js","Components/Lame/index.js","Components/Line/styles.js","Components/Line/index.js","Components/Forms/inputLabel.js","Components/Forms/styles.js","Components/Forms/room.js","Components/Forms/lame.js","utils/constants.js","Components/RadioButton/styles.js","Components/RadioButton/index.js","Components/Forms/mode.js","Containers/App/styles.js","Containers/App/index.js","serviceWorker.js","index.js"],"names":["SCRoom","styled","_templateObject","props","concat","values","long","larg","Room","_ref","children","react_default","a","createElement","SCPiece","styles_templateObject","top","left","width","height","Piece","SCLame","Lame_styles_templateObject","value","Lame","SCLine","Line_styles_templateObject","Line","data","lame","map","line","i","Components_Lame","key","SCInputLabel","inputLabel_templateObject","InputLabel","label","SCForm","Forms_styles_templateObject","SCFormTitle","_templateObject2","SCAddCustomButton","_templateObject3","roomForm","_ref$room","room","dilatation","updateVal","inputLabel","lib","type","onChange","e","target","debounceTimeout","step","min","LameForm","_ref$lame","MODE_ALTERNE","MODE_LAST_TO_FIRST","MODE_TIER_TWO_TIER","MODE_CUSTOM","arrayPieces","SCRadioButton","RadioButton_styles_templateObject","RadioButton","checked","onHandleChange","name","currentTarget","modeForm","mode","customLine","addCustomLine","displayCustom","Components_RadioButton","onClick","length","SCContainer","App_styles_templateObject","SCLeftBlock","styles_templateObject2","SCMessage","styles_templateObject3","SCCustomMessage","_templateObject4","SCFlexContent","_templateObject5","SCRemoveButton","_templateObject6","App","state","nbLineMaxCalculated","showWall","arguments","undefined","id","_this","setState","prevState","Object","defineProperty","objectSpread","calculateLine","firstVal","baseLong","push","nbR","Math","trunc","apply","toConsumableArray","Array","from","keys","round","reduce","acc","curr","parseFloat","index","_ref2","_ref3","toArray","first","other","slice","end","pop","chute","required","updateFirstLineVal","autoFocus","onKeyPress","event","removeCustomLine","val","newVal","splice","generateLine","forceLine","_lines","lines","half","Onetier","Twotier","toFixed","_lines2","baseLarg","firstLame","currentLine","last","nbrLarg","diffLarg","message","_this2","this","_this$generateLine","_this$generateLine$va","content","_this$generateLine$me","className","Forms_mode","Components_Room","react","style","Components_Piece","j","Components_Line","Component","Boolean","window","location","hostname","match","ReactDOM","render","Containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5157e2db.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const SCRoom = styled('div')`\n  position: relative;\n  width: ${(props) => `${props.values.long}px`};\n  height: ${(props) => `${props.values.larg}px`};\n  box-shadow: inset 0px 0px 0px 2px #000;\n  overflow: hidden;\n  margin: auto;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { SCRoom } from './styles'\n\nconst Room = ({ children, values }) => <SCRoom values={values}>{children}</SCRoom>\n\nRoom.propTypes = {\n  children: PropTypes.any,\n  values: PropTypes.shape({\n    long: PropTypes.number,\n    larg: PropTypes.number,\n    dilatation: PropTypes.number,\n  }),\n}\n\nexport default Room\n","import styled from 'styled-components'\n\nexport const SCPiece = styled('div')`\n  position: absolute;\n  box-shadow: inset 0px 0px 0px 1px;\n  background: black;\n  top: ${(props) => `${props.values.top || 0}px`};\n  left: ${(props) => `${props.values.left || 0}px`};\n  width: ${(props) => `${props.values.width || 0}px`};\n  height: ${(props) => `${props.values.height || 0}px`};\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { SCPiece } from './styles'\n\nconst Piece = ({ children, values }) => <SCPiece values={values}>{children}</SCPiece>\n\nPiece.propTypes = {\n  children: PropTypes.any,\n  values: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n}\n\nexport default Piece\n","import styled from 'styled-components'\n\nexport const SCLame = styled('div')`\n  font-size: 10px;\n  box-shadow: inset 0px 0px 0px 1px;\n  margin: 0;\n  padding: 0;\n  width: ${(props) => `${props.value}px`};\n  height: ${(props) => `${props.larg}px`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { SCLame } from './styles'\n\nconst Lame = ({ value, larg }) => <SCLame {...{ value, larg }}>{`${value}cm`}</SCLame>\n\nLame.propTypes = {\n  value: PropTypes.number,\n  larg: PropTypes.number,\n}\n\nexport default Lame\n","import styled from 'styled-components'\n\nexport const SCLine = styled('div')`\n  display: flex;\n  text-align: center;\n  overflow: visible;\n  justify-content: center;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Lame from 'Components/Lame'\nimport { SCLine } from './styles'\n\nconst Line = ({ data, lame: { larg } }) => (\n  <SCLine>\n    {data && data.map((line, i) => <Lame key={`${i}-lame`} value={line} larg={larg} />)}\n  </SCLine>\n)\n\nLine.propTypes = {\n  data: PropTypes.array,\n  lame: PropTypes.shape({\n    larg: PropTypes.number,\n  }),\n}\n\nexport default Line\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nexport const SCInputLabel = styled('div')`\n  position: relative;\n`\n\nconst InputLabel = ({ label, children }) => (\n  <SCInputLabel>\n    {children}\n    <label>{label}</label>\n  </SCInputLabel>\n)\n\nInputLabel.propTypes = {\n  label: PropTypes.string,\n  children: PropTypes.node,\n}\n\nexport default InputLabel\n","import styled from 'styled-components'\n\nexport const SCForm = styled('div')`\n  padding: 10px;\n  border: 3px solid #999;\n  position: relative;\n  margin: 10px;\n`\nexport const SCFormTitle = styled('h2')`\n  color: #999;\n  position: absolute;\n  top: -21px;\n  left: 10px;\n  z-index: 1;\n  background: #fff;\n  padding: 0 6px;\n`\nexport const SCAddCustomButton = styled('button')`\n  padding: 5px 10px;\n  margin: 10px 0 20px;\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DebounceInput } from 'react-debounce-input'\nimport InputLabel from 'Components/Forms/inputLabel'\n\nimport { SCForm, SCFormTitle } from './styles'\n\nconst roomForm = ({ room: { long, larg, dilatation }, updateVal }) => (\n  <SCForm>\n    <SCFormTitle>Pièce</SCFormTitle>\n    <InputLabel label=\"Longueur (cm)\">\n      <DebounceInput\n        type=\"text\"\n        value={long}\n        onChange={(e) => updateVal('long')(e.target.value)}\n        debounceTimeout={700}\n      />\n    </InputLabel>\n    <InputLabel label=\"Largeur (cm)\">\n      <DebounceInput\n        type=\"text\"\n        value={larg}\n        onChange={(e) => updateVal('larg')(e.target.value)}\n        debounceTimeout={700}\n      />\n    </InputLabel>\n\n    <InputLabel label=\"Joint de dilatation (cm)\">\n      <DebounceInput\n        type=\"number\"\n        step=\"0.1\"\n        min={0}\n        value={dilatation || 0}\n        onChange={(e) => updateVal('dilatation')(e.target.value)}\n        debounceTimeout={700}\n      />\n    </InputLabel>\n  </SCForm>\n)\n\nroomForm.propTypes = {\n  updateVal: PropTypes.func,\n  room: PropTypes.shape({\n    long: PropTypes.number,\n    larg: PropTypes.number,\n    dilatation: PropTypes.number,\n  }),\n}\n\nexport default roomForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { DebounceInput } from 'react-debounce-input'\n\nimport InputLabel from 'Components/Forms/inputLabel'\nimport { SCForm, SCFormTitle } from './styles'\n\nconst LameForm = ({ lame: { long, larg }, updateVal }) => (\n  <SCForm>\n    <SCFormTitle>Lames</SCFormTitle>\n    <InputLabel label=\"Longueur (cm)\">\n      <DebounceInput\n        type=\"text\"\n        value={long}\n        onChange={(e) => updateVal('long')(e.target.value)}\n        debounceTimeout={700}\n      />\n    </InputLabel>\n\n    <InputLabel label=\"Largeur (cm)\">\n      <DebounceInput\n        type=\"text\"\n        value={larg}\n        onChange={(e) => updateVal('larg')(e.target.value)}\n        debounceTimeout={700}\n      />\n    </InputLabel>\n  </SCForm>\n)\n\nLameForm.propTypes = {\n  updateVal: PropTypes.func,\n  lame: PropTypes.shape({\n    long: PropTypes.number,\n    larg: PropTypes.number,\n  }),\n}\n\nexport default LameForm\n","export const MODE_ALTERNE = 'alterne'\nexport const MODE_LAST_TO_FIRST = 'lastToFirst'\nexport const MODE_TIER_TWO_TIER = 'tierTWoTier'\nexport const MODE_CUSTOM = 'custom'\n\nexport const arrayPieces = [\n  { top: 0, left: 571, width: 300, height: 437 },\n  { top: 0, left: 571, width: 300, height: 437 },\n  { top: 0, left: 571, width: 300, height: 437 },\n  { top: 812, left: 0, width: 176, height: 97 },\n  { top: 630, left: 0, width: 136, height: 83 },\n  { top: 713, left: 0, width: 64, height: 99 },\n  { top: 633, left: 224, width: 7, height: 88 },\n  { top: 626, left: 0, width: 408, height: 7 },\n  { top: 411, left: 128, width: 280, height: 7 },\n  { top: 417, left: 401, width: 7, height: 210 },\n  { top: 587, left: 492, width: 462, height: 7 },\n  { top: 823, left: 281, width: 7, height: 367 },\n  { top: 823, left: 537, width: 18, height: 367 },\n  { top: 823, left: 288, width: 396, height: 7 },\n  { top: 594, left: 500, width: 7, height: 111 },\n  { top: 594, left: 679, width: 7, height: 280 },\n  { top: 698, left: 507, width: 176, height: 7 },\n  { top: 719, left: 224, width: 184, height: 7 },\n]\n","import styled from 'styled-components'\n\nexport const SCRadioButton = styled('div')`\n  margin: 5px 0;\n  text-align: left;\n  h3 {\n    font-size: 14px;\n    display: inline-block;\n    margin-left: 5px;\n    text-transform: uppercase;\n  }\n\n  p {\n    font-size: 11px;\n    font-style: italic;\n    margin: 0px 0 5px;\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { SCRadioButton } from './styles'\n\nconst RadioButton = ({ value, checked, onHandleChange, children }) => (\n  <SCRadioButton>\n    <input\n      type=\"radio\"\n      name=\"mode\"\n      value={value}\n      checked={checked}\n      onChange={(e) => onHandleChange(e.currentTarget.value)}\n    />\n    {children}\n  </SCRadioButton>\n)\n\nRadioButton.propTypes = {\n  value: PropTypes.string,\n  children: PropTypes.any,\n  checked: PropTypes.bool,\n  onHandleChange: PropTypes.func,\n}\n\nexport default RadioButton\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { MODE_LAST_TO_FIRST, MODE_TIER_TWO_TIER, MODE_CUSTOM, MODE_ALTERNE } from 'utils/constants'\n\nimport RadioButton from 'Components/RadioButton'\n\nimport { SCForm, SCFormTitle, SCAddCustomButton } from './styles'\n\nconst modeForm = ({ mode, updateVal, customLine, addCustomLine, displayCustom }) => (\n  <SCForm>\n    <SCFormTitle>Mode</SCFormTitle>\n    <div>\n      <RadioButton value={MODE_ALTERNE} checked={mode === MODE_ALTERNE} onHandleChange={updateVal}>\n        <h3>Coupe de pierre</h3>\n        <p>\n          Appelé aussi \"La pose alternée\", Il vous suffit de décaler les lames sur une\n          demi-longueur, pour un effet réussi et une pose simple à réaliser, mais moins naturel.\n        </p>\n      </RadioButton>\n      <RadioButton\n        value={MODE_LAST_TO_FIRST}\n        checked={mode === MODE_LAST_TO_FIRST}\n        onHandleChange={updateVal}\n      >\n        <h3>Coupe perdue</h3>\n        <p>\n          La chute de la série de lame précédente est utilisée pour démarrer la pose de la rangée\n        </p>\n      </RadioButton>\n      <RadioButton\n        value={MODE_TIER_TWO_TIER}\n        checked={mode === MODE_TIER_TWO_TIER}\n        onHandleChange={updateVal}\n      >\n        <h3>1/3 & 2/3</h3>\n        <p>\n          La première série commence par 1/3 de la lame, la seconde 2/3 et la dernière par la lame\n          entière !\n        </p>\n      </RadioButton>\n      <RadioButton value={MODE_CUSTOM} checked={mode === MODE_CUSTOM} onHandleChange={updateVal}>\n        <h3>Mode sandbox</h3>\n        <p>Ajoutez les séries que vous voulez, l'application générera les lignes</p>\n        {mode === MODE_CUSTOM && (\n          <div>\n            <div>\n              <SCAddCustomButton onClick={addCustomLine}>Ajouter une ligne</SCAddCustomButton>\n            </div>\n            {customLine &&\n              customLine.length > 0 &&\n              customLine.map((line, i) => displayCustom(i, line))}\n          </div>\n        )}\n      </RadioButton>\n    </div>\n  </SCForm>\n)\n\nmodeForm.propTypes = {\n  updateVal: PropTypes.func,\n  mode: PropTypes.string,\n  customLine: PropTypes.array,\n  addCustomLine: PropTypes.func,\n  displayCustom: PropTypes.func,\n}\n\nexport default modeForm\n","import styled from 'styled-components'\n\nexport const SCContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n  align-items: flex-start;\n`\nexport const SCLeftBlock = styled('div')`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`\nexport const SCMessage = styled('p')`\n  padding: 10px;\n`\nexport const SCCustomMessage = styled('span')`\n  margin: 13px 10px 0;\n`\n\nexport const SCFlexContent = styled('div')`\n  display: flex;\n`\nexport const SCRemoveButton = styled('span')`\n  margin-left: 10px;\n`\n","import React, { Component, Fragment } from 'react'\nimport { DebounceInput } from 'react-debounce-input'\n\nimport Room from 'Components/Room'\nimport Piece from 'Components/Piece'\nimport Line from 'Components/Line'\nimport RoomForm from 'Components/Forms/room'\nimport LameForm from 'Components/Forms/lame'\nimport ModeForm from 'Components/Forms/mode'\nimport InputLabel from 'Components/Forms/inputLabel'\n\nimport {\n  MODE_LAST_TO_FIRST,\n  MODE_TIER_TWO_TIER,\n  MODE_CUSTOM,\n  MODE_ALTERNE,\n  arrayPieces,\n} from 'utils/constants'\n\nimport {\n  SCContainer,\n  SCLeftBlock,\n  SCMessage,\n  SCFlexContent,\n  SCRemoveButton,\n  SCCustomMessage,\n} from './styles'\n\nclass App extends Component {\n  state = {\n    lame: { long: 128.5, larg: 19.4 },\n    room: { long: 870, larg: 1195, dilatation: 0.5 },\n    customLine: [],\n    mode: MODE_LAST_TO_FIRST,\n    nbLineMaxCalculated: 10,\n    showWall: false,\n  }\n\n  updateVal = (type = false) => (id) => (value) => {\n    if (!value || value <= 0) return false\n    if (type) {\n      this.setState((prevState) => ({ [type]: { ...prevState[type], [id]: value } }))\n    } else {\n      this.setState({ [id]: value })\n    }\n  }\n\n  calculateLine = (firstVal) => {\n    if (!firstVal) return false\n    const baseLong = this.state.room.long - this.state.room.dilatation * 2\n    const line = []\n    if (firstVal > this.state.room.long) {\n      line.push(baseLong)\n      return line\n    }\n    line.push(firstVal)\n    const nbR = Math.trunc((baseLong - firstVal) / this.state.lame.long)\n\n    line.push(...Array.from(Array(nbR).keys()).map(() => this.state.lame.long))\n    line.push(\n      Math.round((baseLong - line.reduce((acc, curr) => acc + parseFloat(curr), 0)) * 100) / 100\n    )\n\n    return line\n  }\n\n  displayCustom = (index, line) => {\n    const [first, ...other] = this.calculateLine(line) || []\n    const end = other.pop() || false\n    const chute = end && Math.round((this.state.lame.long - end) * 100) / 100\n\n    return (\n      <SCFlexContent>\n        <InputLabel label=\"Longueur (cm)\">\n          <DebounceInput\n            type=\"number\"\n            required\n            value={first}\n            onChange={(e) => this.updateFirstLineVal(index, e.target.value)}\n            debounceTimeout={700}\n            autoFocus\n            onKeyPress={(event) => {\n              if (event.key === 'Enter') {\n                this.addCustomLine()\n              }\n            }}\n          />\n        </InputLabel>\n\n        {first && (\n          <SCCustomMessage>\n            {` puis ${other.length} lame(s) de ${\n              this.state.lame.long\n            } et une derniere de ${end}, chute de: ${chute}`}\n            <SCRemoveButton onClick={() => this.removeCustomLine(index)}>[X]</SCRemoveButton>\n          </SCCustomMessage>\n        )}\n      </SCFlexContent>\n    )\n  }\n\n  updateFirstLineVal = (index, val) => {\n    const value = val < this.state.lame.long ? val : this.state.lame.long\n    this.setState((prevState) => {\n      const newVal = [...prevState.customLine]\n      newVal[index] = value\n      return { customLine: newVal }\n    })\n  }\n\n  addCustomLine = () => {\n    this.setState((prevState) => ({ customLine: [...prevState.customLine, null] }))\n  }\n\n  removeCustomLine = (index) => {\n    this.setState((prevState) => {\n      const newVal = [...prevState.customLine]\n      if (index) {\n        newVal.splice(index, 1)\n      }\n      return { customLine: newVal }\n    })\n  }\n\n  generateLine = (forceLine) => {\n    let lines = []\n    if (forceLine) {\n      lines.push(...forceLine)\n    } else {\n      switch (this.state.mode) {\n        case MODE_CUSTOM:\n          lines = this.state.customLine\n            ? this.state.customLine.map((value) => this.calculateLine(value))\n            : []\n          break\n        case MODE_ALTERNE: {\n          const half = Math.round((this.state.lame.long / 2) * 100) / 100\n\n          lines.push(this.calculateLine(this.state.lame.long), this.calculateLine(half))\n          break\n        }\n        case MODE_TIER_TWO_TIER: {\n          const Onetier = Math.round((this.state.lame.long / 3) * 100) / 100\n          const Twotier = Onetier.toFixed(2) * 2\n\n          lines.push(\n            this.calculateLine(Onetier),\n            this.calculateLine(Twotier),\n            this.calculateLine(this.state.lame.long)\n          )\n          break\n        }\n        case MODE_LAST_TO_FIRST:\n        default: {\n          let first = false\n          const baseLarg = this.state.room.larg - this.state.room.dilatation * 2\n          const nbLineMaxCalculated =\n            this.state.nbLineMaxCalculated || Math.trunc(baseLarg / this.state.lame.larg)\n\n          lines.push(\n            ...Array.from(Array(nbLineMaxCalculated).keys()).map(() => {\n              const firstLame = first || this.state.lame.long\n              const currentLine = this.calculateLine(firstLame)\n              const last = currentLine[currentLine.length - 1]\n              first = Math.round((this.state.lame.long - last) * 100) / 100\n              return currentLine\n            })\n          )\n          break\n        }\n      }\n    }\n\n    // CALCUl nbr en largeur\n    const baseLarg = this.state.room.larg - this.state.room.dilatation * 2\n    const nbrLarg = Math.trunc(baseLarg / this.state.lame.larg)\n    const diffLarg = baseLarg - nbrLarg * this.state.lame.larg\n\n    let i = lines.length - 1\n    if (i < 0) {\n      return false\n    }\n\n    return {\n      values: Array.from(Array(nbrLarg + 1).keys()).map(() => {\n        i = i === lines.length - 1 ? 0 : i + 1\n        return lines[i]\n      }),\n      message:\n        diffLarg > 0\n          ? `La hauteur des lames de la dernière série fera ${diffLarg.toFixed(2)}cm`\n          : false,\n    }\n  }\n\n  render() {\n    const { values: content = [], message = false } = this.generateLine()\n    return (\n      <div className=\"App\">\n        <h1>Mon Plan de Calepinage</h1>\n\n        <SCContainer>\n          <SCLeftBlock>\n            <RoomForm room={this.state.room} updateVal={this.updateVal('room')} />\n            <LameForm lame={this.state.lame} updateVal={this.updateVal('lame')} />\n          </SCLeftBlock>\n          <ModeForm\n            customLine={this.state.customLine}\n            addCustomLine={this.addCustomLine}\n            mode={this.state.mode}\n            updateVal={this.updateVal()('mode')}\n            displayCustom={this.displayCustom}\n          />\n        </SCContainer>\n        <SCMessage>{message && <strong>{message}</strong>}</SCMessage>\n\n        {/* <div>\n            show Wall :{' '}\n            <input\n              type=\"checkbox\"\n              checked={this.state.showWall}\n              onClick={() => this.setState((prevState) => ({ showWall: !prevState.showWall }))}\n            />\n          </div> */}\n\n        <Room values={this.state.room}>\n          {this.state.showWall && (\n            <Fragment>\n              <div className=\"regle\" style={{ top: 420, left: 408, width: 163, height: 5 }} />\n              {arrayPieces.map((values, i) => (\n                <Piece key={`${i}-piece`} values={values} />\n              ))}\n            </Fragment>\n          )}\n\n          {content &&\n            content.length > 0 &&\n            content.map((line, j) => <Line data={line} key={`${j}-line`} lame={this.state.lame} />)}\n        </Room>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Containers/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}